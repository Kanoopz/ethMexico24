"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalMulticallSimulator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "functionCall",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "tryMulticall",
        outputs: [
            {
                internalType: "bool[]",
                name: "successes",
                type: "bool[]",
            },
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610985806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063437b911614610046578063a0b5ffb014610070578063ac9650d814610090575b600080fd5b610059610054366004610636565b6100b0565b60405161006792919061074d565b60405180910390f35b61008361007e3660046107bc565b610216565b6040516100679190610899565b6100a361009e366004610636565b6102ca565b60405161006791906108ac565b606080828067ffffffffffffffff8111156100cd576100cd6107a6565b6040519080825280602002602001820160405280156100f6578160200160208202803683370190505b5092508067ffffffffffffffff811115610112576101126107a6565b60405190808252806020026020018201604052801561014557816020015b60608152602001906001900390816101305790505b50915060005b8181101561020d5730868683818110610166576101666108bf565b905060200281019061017891906108d5565b604051610186929190610923565b600060405180830381855af49150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b508583815181106101d9576101d96108bf565b602002602001018584815181106101f2576101f26108bf565b6020908102919091010191909152901515905260010161014b565b50509250929050565b6060331561026b5760405162461bcd60e51b815260206004820152601760248201527f53656e6465722061646472657373206e6f74207a65726f00000000000000000060448201526064015b60405180910390fd5b3a156102b95760405162461bcd60e51b815260206004820152601560248201527f547820676173207072696365206e6f74207a65726f00000000000000000000006044820152606401610262565b6102c3838361044b565b9392505050565b6060818067ffffffffffffffff8111156102e6576102e66107a6565b60405190808252806020026020018201604052801561031957816020015b60608152602001906001900390816103045790505b50915060005b818110156104435760003086868481811061033c5761033c6108bf565b905060200281019061034e91906108d5565b60405161035c929190610923565b600060405180830381855af49150503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b508584815181106103af576103af6108bf565b602090810291909101015290508061043a5760008483815181106103d5576103d56108bf565b602002602001015190506000815111156103f25780518082602001fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d756c746963616c6c3a204e6f2072657665727420737472696e6700000000006044820152606401610262565b5060010161031f565b505092915050565b60606102c3838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506060824710156105025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610262565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161052b9190610933565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b509150915061057e8783838761058b565b925050505b949350505050565b606083156106075782516000036106005773ffffffffffffffffffffffffffffffffffffffff85163b6106005760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610262565b5081610583565b610583838381511561061c5781518083602001fd5b8060405162461bcd60e51b81526004016102629190610899565b6000806020838503121561064957600080fd5b823567ffffffffffffffff8082111561066157600080fd5b818501915085601f83011261067557600080fd5b81358181111561068457600080fd5b8660208260051b850101111561069957600080fd5b60209290920196919550909350505050565b60005b838110156106c65781810151838201526020016106ae565b50506000910152565b600081518084526106e78160208601602086016106ab565b601f01601f19169290920160200192915050565b6000815180845260208085019450848260051b860182860160005b8581101561074057838303895261072e8383516106cf565b98850198925090840190600101610716565b5090979650505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561078857815115158452928401929084019060010161076a565b5050508381038285015261079c81866106fb565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156107cf57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146107f357600080fd5b9150602083013567ffffffffffffffff8082111561081057600080fd5b818501915085601f83011261082457600080fd5b813581811115610836576108366107a6565b604051601f8201601f19908116603f0116810190838211818310171561085e5761085e6107a6565b8160405282815288602084870101111561087757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020815260006102c360208301846106cf565b6020815260006102c360208301846106fb565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126108ec57600080fd5b83018035915067ffffffffffffffff82111561090757600080fd5b60200191503681900382131561091c57600080fd5b9250929050565b8183823760009101908152919050565b600082516109458184602087016106ab565b919091019291505056fea2646970667358221220fb75d29fed8c3df8cc65fe0d3dc29549df89db33cd475cb87f46b57462c17d8864736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class ExternalMulticallSimulator__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ExternalMulticallSimulator__factory = ExternalMulticallSimulator__factory;
//# sourceMappingURL=ExternalMulticallSimulator__factory.js.map