import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockSelfMulticall, MockSelfMulticallInterface } from "../../test/MockSelfMulticall";
type MockSelfMulticallConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockSelfMulticall__factory extends ContractFactory {
    constructor(...args: MockSelfMulticallConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<MockSelfMulticall & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): MockSelfMulticall__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610a5b806100206000396000f3fe6080604052600436106100705760003560e01c8063841e07551161004e578063841e0755146100ee5780638ef62b291461010f57806393ab31751461012f578063ac9650d81461015157600080fd5b8063437b91161461007557806349944972146100ac5780636301c389146100ce575b600080fd5b34801561008157600080fd5b50610095610090366004610748565b61017e565b6040516100a3929190610842565b60405180910390f35b3480156100b857600080fd5b506100cc6100c736600461089b565b6102e4565b005b3480156100da57600080fd5b506100cc6100e936600461089b565b610380565b6101016100fc3660046108bd565b6103cf565b6040519081526020016100a3565b34801561011b57600080fd5b506100cc61012a36600461089b565b610461565b34801561013b57600080fd5b5061014461051b565b6040516100a391906108d6565b34801561015d57600080fd5b5061017161016c366004610748565b6105c7565b6040516100a3919061091a565b606080828067ffffffffffffffff81111561019b5761019b610934565b6040519080825280602002602001820160405280156101c4578160200160208202803683370190505b5092508067ffffffffffffffff8111156101e0576101e0610934565b60405190808252806020026020018201604052801561021357816020015b60608152602001906001900390816101fe5790505b50915060005b818110156102db57308686838181106102345761023461094a565b90506020028101906102469190610960565b6040516102549291906109ae565b600060405180830381855af49150503d806000811461028f576040519150601f19603f3d011682016040523d82523d6000602084013e610294565b606091505b508583815181106102a7576102a761094a565b602002602001018584815181106102c0576102c061094a565b60209081029190910101919091529015159052600101610219565b50509250929050565b6000821380156102f45750600081125b6103385760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527f5265766572746564207769746820737472696e67000000000000000000000000604482015260640161032f565b6000821380156103905750600081125b6100705760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b604482015260640161032f565b60008082136104205760405162461bcd60e51b815260206004820152601560248201527f417267756d656e74206e6f7420706f7369746976650000000000000000000000604482015260640161032f565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630182905561045b826109d4565b92915050565b6000821380156104715750600081125b6104b05760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b604482015260640161032f565b604080517f0b9344e2000000000000000000000000000000000000000000000000000000008152607b60048201526024810191909152600360448201527f466f6f0000000000000000000000000000000000000000000000000000000000606482015260840161032f565b600080546060919067ffffffffffffffff81111561053b5761053b610934565b604051908082528060200260200182016040528015610564578160200160208202803683370190505b50905060005b6000548110156105c157600081815481106105875761058761094a565b90600052602060002001548282815181106105a4576105a461094a565b6020908102919091010152806105b981610a0c565b91505061056a565b50919050565b6060818067ffffffffffffffff8111156105e3576105e3610934565b60405190808252806020026020018201604052801561061657816020015b60608152602001906001900390816106015790505b50915060005b81811015610740576000308686848181106106395761063961094a565b905060200281019061064b9190610960565b6040516106599291906109ae565b600060405180830381855af49150503d8060008114610694576040519150601f19603f3d011682016040523d82523d6000602084013e610699565b606091505b508584815181106106ac576106ac61094a565b60209081029190910101529050806107375760008483815181106106d2576106d261094a565b602002602001015190506000815111156106ef5780518082602001fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d756c746963616c6c3a204e6f2072657665727420737472696e670000000000604482015260640161032f565b5060010161061c565b505092915050565b6000806020838503121561075b57600080fd5b823567ffffffffffffffff8082111561077357600080fd5b818501915085601f83011261078757600080fd5b81358181111561079657600080fd5b8660208260051b85010111156107ab57600080fd5b60209290920196919550909350505050565b600081518084526020808501808196508360051b810191508286016000805b86811015610834578385038a5282518051808752835b8181101561080d578281018901518882018a015288016107f2565b5086810188018490529a87019a601f01601f191690950186019450918501916001016107dc565b509298975050505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561087d57815115158452928401929084019060010161085f565b5050508381038285015261089181866107bd565b9695505050505050565b600080604083850312156108ae57600080fd5b50508035926020909101359150565b6000602082840312156108cf57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561090e578351835292840192918401916001016108f2565b50909695505050505050565b60208152600061092d60208301846107bd565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261097757600080fd5b83018035915067ffffffffffffffff82111561099257600080fd5b6020019150368190038213156109a757600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b60007f80000000000000000000000000000000000000000000000000000000000000008203610a0557610a056109be565b5060000390565b600060018201610a1e57610a1e6109be565b506001019056fea26469706673582212205f62e462bbbc3ed49fc8fa7f9c9cec1bfa4ddcd9b2464928e4c11c2f1ab3dab164736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "fieldAlways123";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "fieldAlwaysFoo";
            readonly type: "string";
        }];
        readonly name: "MyError";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "int256";
            readonly name: "argPositive";
            readonly type: "int256";
        }, {
            readonly internalType: "int256";
            readonly name: "argNegative";
            readonly type: "int256";
        }];
        readonly name: "alwaysRevertsWithCustomError";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "int256";
            readonly name: "argPositive";
            readonly type: "int256";
        }, {
            readonly internalType: "int256";
            readonly name: "argNegative";
            readonly type: "int256";
        }];
        readonly name: "alwaysRevertsWithNoData";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "int256";
            readonly name: "argPositive";
            readonly type: "int256";
        }, {
            readonly internalType: "int256";
            readonly name: "argNegative";
            readonly type: "int256";
        }];
        readonly name: "alwaysRevertsWithString";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "argumentHistory";
        readonly outputs: readonly [{
            readonly internalType: "int256[]";
            readonly name: "";
            readonly type: "int256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "int256";
            readonly name: "argPositive";
            readonly type: "int256";
        }];
        readonly name: "convertsPositiveArgumentToNegative";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "tryMulticall";
        readonly outputs: readonly [{
            readonly internalType: "bool[]";
            readonly name: "successes";
            readonly type: "bool[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MockSelfMulticallInterface;
    static connect(address: string, runner?: ContractRunner | null): MockSelfMulticall;
}
export {};
//# sourceMappingURL=MockSelfMulticall__factory.d.ts.map