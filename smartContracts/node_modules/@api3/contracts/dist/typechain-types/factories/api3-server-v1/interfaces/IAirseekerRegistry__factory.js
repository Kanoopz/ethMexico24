"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IAirseekerRegistry__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
        ],
        name: "ActivatedDapiName",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "ActivatedDataFeedId",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
        ],
        name: "DeactivatedDapiName",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "DeactivatedDataFeedId",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "dataFeedDetails",
                type: "bytes",
            },
        ],
        name: "RegisteredDataFeed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        name: "UpdatedDapiNameUpdateParameters",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        name: "UpdatedDataFeedIdUpdateParameters",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "signedApiUrl",
                type: "string",
            },
        ],
        name: "UpdatedSignedApiUrl",
        type: "event",
    },
    {
        inputs: [],
        name: "MAXIMUM_BEACON_COUNT_IN_SET",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAXIMUM_SIGNED_API_URL_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAXIMUM_UPDATE_PARAMETERS_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "activeDapiNameCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "activeDataFeed",
        outputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "dataFeedDetails",
                type: "bytes",
            },
            {
                internalType: "int224",
                name: "dataFeedValue",
                type: "int224",
            },
            {
                internalType: "uint32",
                name: "dataFeedTimestamp",
                type: "uint32",
            },
            {
                internalType: "int224[]",
                name: "beaconValues",
                type: "int224[]",
            },
            {
                internalType: "uint32[]",
                name: "beaconTimestamps",
                type: "uint32[]",
            },
            {
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
            {
                internalType: "string[]",
                name: "signedApiUrls",
                type: "string[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "activeDataFeedCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "activeDataFeedIdCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
        ],
        name: "airnodeToSignedApiUrl",
        outputs: [
            {
                internalType: "string",
                name: "signedApiUrl",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "api3ServerV1",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "containsBytecode",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
        ],
        name: "dapiNameToUpdateParameters",
        outputs: [
            {
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "dataFeedIdToDetails",
        outputs: [
            {
                internalType: "bytes",
                name: "dataFeedDetails",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "dataFeedIdToUpdateParameters",
        outputs: [
            {
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "dataFeedIsRegistered",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "getBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockBasefee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockNumber",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "dataFeedDetails",
                type: "bytes",
            },
        ],
        name: "registerDataFeed",
        outputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
        ],
        name: "setDapiNameToBeActivated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
        ],
        name: "setDapiNameToBeDeactivated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dapiName",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        name: "setDapiNameUpdateParameters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "setDataFeedIdToBeActivated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "setDataFeedIdToBeDeactivated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "updateParameters",
                type: "bytes",
            },
        ],
        name: "setDataFeedIdUpdateParameters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                internalType: "string",
                name: "signedApiUrl",
                type: "string",
            },
        ],
        name: "setSignedApiUrl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "tryMulticall",
        outputs: [
            {
                internalType: "bool[]",
                name: "successes",
                type: "bool[]",
            },
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IAirseekerRegistry__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IAirseekerRegistry__factory = IAirseekerRegistry__factory;
//# sourceMappingURL=IAirseekerRegistry__factory.js.map