import { type ContractRunner } from "ethers";
import type { IOevAuctionHouse, IOevAuctionHouseInterface } from "../../../api3-server-v1/interfaces/IOevAuctionHouse";
export declare class IOevAuctionHouse__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "AwardDetailsAreEmpty";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "AwardHasExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidAmountIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidDetailsAreEmpty";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidFulfillmentCannotBeConfirmed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidFulfillmentCannotBeContradicted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidHasExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidIsAlreadyPlaced";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidIsNotAwaitingAward";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidIsNotAwaitingFulfillmentReport";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidLifetimeIsLongerThanMaximum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidLifetimeIsShorterThanMinimum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidderAddressIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidderBalanceIsLowerThanTheLockedAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidderCannotWithdrawYet";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "BidderHasAlreadyInitiatedWithdrawal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ChainIdIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CollateralRateIsNotPositive";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CollateralRateIsStale";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DepositAmountIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FulfillmentDetailsAreEmpty";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaxCollateralAmountIsExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaxProtocolFeeAmountIsExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaximumAuctioneerDataLengthIsExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaximumBidderDataLengthIsExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeCurrencyRateIsNotPositive";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeCurrencyRateIsStale";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProxyAddressIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RecipientAddressIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderHasNotInitiatedWithdrawal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderIsNotAProxySetterOrTheManager";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderIsNotAWithdrawerOrTheManager";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderIsNotAnAuctioneer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderIsNotTheManager";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampDoesNotExpediteExpiration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "WithdrawalAmountIsZero";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "awardDetails";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }];
        readonly name: "AwardedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "CanceledWithdrawal";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "accumulatedProtocolFees";
            readonly type: "uint256";
        }];
        readonly name: "ConfirmedFulfillment";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "accumulatedSlashedCollateral";
            readonly type: "uint256";
        }];
        readonly name: "ContradictedFulfillment";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "Deposited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly name: "ExpeditedBidExpiration";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "earliestWithdrawalTimestamp";
            readonly type: "uint256";
        }];
        readonly name: "InitiatedWithdrawal";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "bidAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "bidDetails";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint104";
            readonly name: "collateralAmount";
            readonly type: "uint104";
        }, {
            readonly indexed: false;
            readonly internalType: "uint104";
            readonly name: "protocolFeeAmount";
            readonly type: "uint104";
        }];
        readonly name: "PlacedBid";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "fulfillmentDetails";
            readonly type: "bytes";
        }];
        readonly name: "ReportedFulfillment";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "nativeCurrencyRateProxy";
            readonly type: "address";
        }];
        readonly name: "SetChainNativeCurrencyRateProxy";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "collateralInBasisPoints";
            readonly type: "uint256";
        }];
        readonly name: "SetCollateralInBasisPoints";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "collateralRateProxy";
            readonly type: "address";
        }];
        readonly name: "SetCollateralRateProxy";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "protocolFeeInBasisPoints";
            readonly type: "uint256";
        }];
        readonly name: "SetProtocolFeeInBasisPoints";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "Withdrew";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "WithdrewAccumulatedProtocolFees";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "WithdrewAccumulatedSlashedCollateral";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "AUCTIONEER_ROLE_DESCRIPTION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "FULFILLMENT_REPORTING_PERIOD";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MAXIMUM_AUCTIONEER_DATA_LENGTH";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MAXIMUM_BIDDER_DATA_LENGTH";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MAXIMUM_BID_LIFETIME";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MINIMUM_BID_LIFETIME";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "PROXY_SETTER_ROLE_DESCRIPTION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "WITHDRAWAL_WAITING_PERIOD";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "WITHDRAWER_ROLE_DESCRIPTION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "accessControlRegistry";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "accumulatedProtocolFees";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "accumulatedSlashedCollateral";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "adminRole";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "adminRoleDescription";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "auctioneerRole";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "awardDetails";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "awardExpirationTimestamp";
            readonly type: "uint256";
        }];
        readonly name: "awardBid";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "bidderToBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "bidderToEarliestWithdrawalTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "earliestWithdrawalTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidId";
            readonly type: "bytes32";
        }];
        readonly name: "bids";
        readonly outputs: readonly [{
            readonly internalType: "enum IOevAuctionHouse.BidStatus";
            readonly name: "status";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint104";
            readonly name: "collateralAmount";
            readonly type: "uint104";
        }, {
            readonly internalType: "uint104";
            readonly name: "protocolFeeAmount";
            readonly type: "uint104";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "cancelWithdrawal";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }];
        readonly name: "chainIdToNativeCurrencyRateProxy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "nativeCurrencyRateProxy";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "collateralInBasisPoints";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "collateralRateProxy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }];
        readonly name: "confirmFulfillment";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "accumulatedProtocolFees_";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }];
        readonly name: "contradictFulfillment";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "accumulatedSlashedCollateral_";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deposit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "bidder";
            readonly type: "address";
        }];
        readonly name: "depositForBidder";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "bidderBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly name: "expediteBidExpiration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }];
        readonly name: "expediteBidExpirationMaximally";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "bidAmount";
            readonly type: "uint256";
        }];
        readonly name: "getCurrentCollateralAndProtocolFeeAmounts";
        readonly outputs: readonly [{
            readonly internalType: "uint104";
            readonly name: "collateralAmount";
            readonly type: "uint104";
        }, {
            readonly internalType: "uint104";
            readonly name: "protocolFeeAmount";
            readonly type: "uint104";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initiateWithdrawal";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "earliestWithdrawalTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "manager";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "bidAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "bidDetails";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxCollateralAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxProtocolFeeAmount";
            readonly type: "uint256";
        }];
        readonly name: "placeBid";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint104";
            readonly name: "collateralAmount";
            readonly type: "uint104";
        }, {
            readonly internalType: "uint104";
            readonly name: "protocolFeeAmount";
            readonly type: "uint104";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "bidAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "bidDetails";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxCollateralAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxProtocolFeeAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly name: "placeBidWithExpiration";
        readonly outputs: readonly [{
            readonly internalType: "uint104";
            readonly name: "collateralAmount";
            readonly type: "uint104";
        }, {
            readonly internalType: "uint104";
            readonly name: "protocolFeeAmount";
            readonly type: "uint104";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "protocolFeeInBasisPoints";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proxySetterRole";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "bidTopic";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bidDetailsHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "fulfillmentDetails";
            readonly type: "bytes";
        }];
        readonly name: "reportFulfillment";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "nativeCurrencyRateProxy";
            readonly type: "address";
        }];
        readonly name: "setChainNativeCurrencyRateProxy";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "collateralInBasisPoints_";
            readonly type: "uint256";
        }];
        readonly name: "setCollateralInBasisPoints";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "collateralRateProxy_";
            readonly type: "address";
        }];
        readonly name: "setCollateralRateProxy";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "protocolFeeInBasisPoints_";
            readonly type: "uint256";
        }];
        readonly name: "setProtocolFeeInBasisPoints";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "tryMulticall";
        readonly outputs: readonly [{
            readonly internalType: "bool[]";
            readonly name: "successes";
            readonly type: "bool[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "withdrawAccumulatedProtocolFees";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "withdrawAccumulatedSlashedCollateral";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdrawerRole";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IOevAuctionHouseInterface;
    static connect(address: string, runner?: ContractRunner | null): IOevAuctionHouse;
}
//# sourceMappingURL=IOevAuctionHouse__factory.d.ts.map