"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRegistryAdminnedWithManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_accessControlRegistry",
                type: "address",
            },
            {
                internalType: "string",
                name: "_adminRoleDescription",
                type: "string",
            },
            {
                internalType: "address",
                name: "_manager",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "accessControlRegistry",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "adminRole",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "adminRoleDescription",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "manager",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "tryMulticall",
        outputs: [
            {
                internalType: "bool[]",
                name: "successes",
                type: "bool[]",
            },
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6101006040523480156200001257600080fd5b5060405162000ca238038062000ca2833981016040819052620000359162000275565b82826001600160a01b038216620000865760405162461bcd60e51b815260206004820152601060248201526f4143522061646472657373207a65726f60801b60448201526064015b60405180910390fd5b6000815111620000d95760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20726f6c65206465736372697074696f6e20656d7074790000000060448201526064016200007d565b6001600160a01b0382166080526000620000f48282620003e4565b5080604051602001620001089190620004b0565b60408051601f19818403018152919052805160209091012060a05250506001600160a01b0381166200017d5760405162461bcd60e51b815260206004820152601460248201527f4d616e616765722061646472657373207a65726f00000000000000000000000060448201526064016200007d565b6001600160a01b03811660c0526200019581620001a2565b60e05250620004ce915050565b600062000216620001e7836040516001600160601b0319606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b60a051604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b92915050565b80516001600160a01b03811681146200023457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200026c57818101518382015260200162000252565b50506000910152565b6000806000606084860312156200028b57600080fd5b62000296846200021c565b60208501519093506001600160401b0380821115620002b457600080fd5b818601915086601f830112620002c957600080fd5b815181811115620002de57620002de62000239565b604051601f8201601f19908116603f0116810190838211818310171562000309576200030962000239565b816040528281528960208487010111156200032357600080fd5b620003368360208301602088016200024f565b80965050505050506200034c604085016200021c565b90509250925092565b600181811c908216806200036a57607f821691505b6020821081036200038b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003df57600081815260208120601f850160051c81016020861015620003ba5750805b601f850160051c820191505b81811015620003db57828155600101620003c6565b5050505b505050565b81516001600160401b0381111562000400576200040062000239565b620004188162000411845462000355565b8462000391565b602080601f831160018114620004505760008415620004375750858301515b600019600386901b1c1916600185901b178555620003db565b600085815260208120601f198616915b82811015620004815788860151825594840194600190910190840162000460565b5085821015620004a05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251620004c48184602087016200024f565b9190910192915050565b60805160a05160c05160e05161079f620005036000396000607b01526000610122015260005050600060b5015261079f6000f3fe608060405234801561001057600080fd5b50600436106100715760003560e01c8063481c6a7511610050578063481c6a751461011d5780634c8f1d8d14610144578063ac9650d81461015957600080fd5b80629f2f3c146100765780631ce9ae07146100b0578063437b9116146100fc575b600080fd5b61009d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a7565b61010f61010a36600461050c565b610179565b6040516100a792919061061f565b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b61014c6102df565b6040516100a79190610678565b61016c61016736600461050c565b61036d565b6040516100a79190610692565b606080828067ffffffffffffffff811115610196576101966106a5565b6040519080825280602002602001820160405280156101bf578160200160208202803683370190505b5092508067ffffffffffffffff8111156101db576101db6106a5565b60405190808252806020026020018201604052801561020e57816020015b60608152602001906001900390816101f95790505b50915060005b818110156102d6573086868381811061022f5761022f6106bb565b905060200281019061024191906106d1565b60405161024f92919061071f565b600060405180830381855af49150503d806000811461028a576040519150601f19603f3d011682016040523d82523d6000602084013e61028f565b606091505b508583815181106102a2576102a26106bb565b602002602001018584815181106102bb576102bb6106bb565b60209081029190910101919091529015159052600101610214565b50509250929050565b600080546102ec9061072f565b80601f01602080910402602001604051908101604052809291908181526020018280546103189061072f565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081565b6060818067ffffffffffffffff811115610389576103896106a5565b6040519080825280602002602001820160405280156103bc57816020015b60608152602001906001900390816103a75790505b50915060005b81811015610504576000308686848181106103df576103df6106bb565b90506020028101906103f191906106d1565b6040516103ff92919061071f565b600060405180830381855af49150503d806000811461043a576040519150601f19603f3d011682016040523d82523d6000602084013e61043f565b606091505b50858481518110610452576104526106bb565b60209081029190910101529050806104fb576000848381518110610478576104786106bb565b602002602001015190506000815111156104955780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d756c746963616c6c3a204e6f2072657665727420737472696e670000000000604482015260640160405180910390fd5b506001016103c2565b505092915050565b6000806020838503121561051f57600080fd5b823567ffffffffffffffff8082111561053757600080fd5b818501915085601f83011261054b57600080fd5b81358181111561055a57600080fd5b8660208260051b850101111561056f57600080fd5b60209290920196919550909350505050565b6000815180845260005b818110156105a75760208185018101518683018201520161058b565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b8481101561061257601f19868403018952610600838351610581565b988401989250908301906001016105e4565b5090979650505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561065a57815115158452928401929084019060010161063c565b5050508381038285015261066e81866105c7565b9695505050505050565b60208152600061068b6020830184610581565b9392505050565b60208152600061068b60208301846105c7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126106e857600080fd5b83018035915067ffffffffffffffff82111561070357600080fd5b60200191503681900382131561071857600080fd5b9250929050565b8183823760009101908152919050565b600181811c9082168061074357607f821691505b60208210810361076357634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122091beeb7c82ec281463c8cc911842e565eca601a75c1b85b5d2c1cfb6b01133bb64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class AccessControlRegistryAdminnedWithManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_accessControlRegistry, _adminRoleDescription, _manager, overrides) {
        return super.getDeployTransaction(_accessControlRegistry, _adminRoleDescription, _manager, overrides || {});
    }
    deploy(_accessControlRegistry, _adminRoleDescription, _manager, overrides) {
        return super.deploy(_accessControlRegistry, _adminRoleDescription, _manager, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AccessControlRegistryAdminnedWithManager__factory = AccessControlRegistryAdminnedWithManager__factory;
//# sourceMappingURL=AccessControlRegistryAdminnedWithManager__factory.js.map